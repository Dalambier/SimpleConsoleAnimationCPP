#include <iostream> //Библиотека ввода-вывода информации
#include <windows.h> //Библиотека для функций Windows, таких как Sleep() и изменение цвета символов


using namespace std; //чтобы не писать везде ::std
const char Symbol = ' '; //Основной символ для отображения элементов(можно изменить на любой)
const short int Seconds = 200; //Задержка появлений строк



//1-красный, 2-жёлтый, 3-белый, 4-серый, 5-отступ, 6-пробел
void A(int color) //Основная функция для работы
{
	HANDLE hwnd = GetStdHandle(STD_OUTPUT_HANDLE); //Объявление hwnd для изменения цвета консоли

	if (color == 1) //Если вызвать функцию с аргументом от 1 до 4, выведется наш символ с определённым цветом
	{
		//SetConsoleTextAttribute(hwnd, FOREGROUND_RED | FOREGROUND_INTENSITY);
		SetConsoleTextAttribute(hwnd, BACKGROUND_RED);
		cout << Symbol;
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);
	}
	else if (color == 2)
	{
		//SetConsoleTextAttribute(hwnd, FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_INTENSITY);
		SetConsoleTextAttribute(hwnd, BACKGROUND_RED | BACKGROUND_GREEN);
		cout << Symbol;
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);
	}
	else if (color == 3)
	{
		//SetConsoleTextAttribute(hwnd, FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE | FOREGROUND_INTENSITY);
		SetConsoleTextAttribute(hwnd, BACKGROUND_GREEN | BACKGROUND_RED | BACKGROUND_BLUE);
		cout << Symbol;
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);
	}
	else if (color == 4)
	{
		//SetConsoleTextAttribute(hwnd, FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_BLUE);
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 128);
		cout << Symbol;
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);
	}
	else if (color == 5) //При вводе аргумента 5-происходит отступ
	{
		cout << endl;
	}
	else if (color == 0) //При вводе аргумента 0-ставится пробел
	{

		cout << ' ';
	}
	else if (color == 9) //При вводе аргумента 
	{

		cout << "                                                                      ";
	}
}

/*-Для нового холста
//00	=01		=02		=03		=04		=05		=06		=07		=08		=09		=10		=11		=12		=13		=NewLine
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //00
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //01
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //02
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //03
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //04
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //05
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //06
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //07
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //08
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //09
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //10
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //11
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //12
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //13
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //14
A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //15
*/
void stick()
{
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(4);	A(4);	A(5);
	for (short i = 0; i < 5; i++)
	{
		A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(3);	A(3);	A(5);
	}
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 7);

	cout <<
		"                            ,d888888888888888888888888888888888888888888888888888888P""""a, " << endl <<
		"                           d8""                                                    `''''''8 " << endl <<
		"                         ,8""           ,_                 a,         .a ......:::::::::;dP'	" << endl <<
		"                        ,8 ;            8b              ..)8 ;;;;;;;;;)b;;;;;;;;;;;amd8 	 " << endl <<
		"                        8';.             88,    ...::::::;;8bagmgggg8888888PPPP'''''	 " << endl <<
		"                       ]8;:    8b        .'888888888888888888''''        ..,aaaa,,.	 " << endl <<
		"                      ,8';.     8b   .::::;88';;;;;d8';:;:88'       ,add88PPPPPPPP888baaa. " << endl <<
		"                      dP;:.      '8;;;;;;a888a;aadP':;:;:8P     ,a8PPP''                ''8	 " << endl <<
		"                     ]8;::.       '8a;;d8888888'';;:;:;a8'  ,ad8P'         .:.:,888888888 8)	 " << endl <<
		"                    ,8';:.          '88';:;'PPP8b;;;;;88,ad8P'     ,a  I.:.:.:(8'......`8 88	 " << endl <<
		"                    dP;::.            'Pba;;::::)8b:d88P''         8 :(I:.:.:.(8::::::::8,8)	 " << endl <<
		"                   (8;::..                `''P88PP''            .: 8,.(8.:.,add88888888888'	 " << endl <<
		"                  ,8';:.:.                                  ..::.::'ga88888PP'''''	 " << endl <<
		"                 .8';:.:..                              ..::.:,add8PP''	 " << endl <<
		"                .88;::::..                           .:.:;aad8P'''	 " << endl <<
		"               .88;;:.:..                        ..:.:;adP''	 " << endl <<
		"              .88;;::.:..                     ...:.:;dP'	 " << endl <<
		"             .88;;:.::..                   ...:.::;d8'	 " << endl <<
		"           .88;;:.:.:..                 ...:.:.;d8'	 " << endl <<
		"           .88;;:.::.:.                ...:.::.;d8 " << endl <<
		"          .88;;:.::.:..              ...:.:.;;d8'	 " << endl <<
		"        .88;;:.:.:.:..            ...:.::.;;88 " << endl <<
		"        ,88;;:.:.:.:...          ...:.::.:;;88 " << endl <<
		"       d8';;:.::.::.....       ....:.::.:;;88	 " << endl <<
		"      88;;::.::.::........   ..:.::.::.;;d88 " << endl <<
		"    .8P;;::.::.:............:.:.:.::;;a88P'	 " << endl <<
		"   dP';;::.:.:.............:..:.:;;ad8P'	 " << endl <<
		" .8P;;:.:.::..............:.:.:;d88P'	" << endl <<
		",88;;.:.::................:.:;d8'	" << endl <<
		"88;;.:.:................:.:;d8P " << endl <<
		"     '':::::...........:.;d8P " << endl <<
		"           '':::::....:.;d8' 	 " << endl <<
		"                  '':::;d8'	" << endl <<
		"                     ':;8' " << endl;

}
void cadr0()
{
	Sleep(Seconds); //Задержка
	system("cls"); //Очистка кадра
}
void cadr1()
{
	//00	=01		=02		=03		=04		=05		=06		=07		=08		=09		=10		=11		=12		=13		=NewLine
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //00
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //01
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //02
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(1);	A(1);	A(0);	A(0);	A(0);	A(0);	A(5); //03
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(1);	A(1);	A(1);	A(0);	A(0);	A(0);	A(0);	A(5); //04
	A(9);	A(1);	A(0);	A(0);	A(1);	A(1);	A(0);	A(1);	A(1);	A(1);	A(0);	A(0);	A(1);	A(0);	A(5); //05
	A(9);	A(1);	A(0);	A(0);	A(1);	A(1);	A(0);	A(1);	A(1);	A(1);	A(1);	A(0);	A(0);	A(0);	A(5); //06
	A(9);	A(0);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //07
	A(9);	A(0);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //08
	A(9);	A(1);	A(0);	A(1);	A(1);	A(1);	A(1);	A(2);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(5); //09
	A(9);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(2);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(5); //10
	A(9);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //11
	A(9);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(0);	A(2);	A(2);	A(1);	A(1);	A(1);	A(5); //12
	A(9);	A(0);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(2);	A(1);	A(1);	A(5); //13
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(0);	A(0);	A(0);	A(0);	A(2);	A(2);	A(1);	A(1);	A(5); //14
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(1);	A(1);	A(0);	A(5); //15

	stick();
}
void cadr2()
{
	//00	=01		=02		=03		=04		=05		=06		=07		=08		=09		=10		=11		=12		=13		=NewLine
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //00
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //01
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(1);	A(0);	A(5); //02
	A(9);	A(0);	A(1);	A(0);	A(0);	A(1);	A(0);	A(0);	A(1);	A(1);	A(0);	A(0);	A(0);	A(0);	A(5); //03
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(1);	A(0);	A(1);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //04
	A(9);	A(0);	A(0);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //05
	A(9);	A(0);	A(1);	A(0);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(0);	A(1);	A(1);	A(5); //06
	A(9);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(0);	A(1);	A(1);	A(5); //07
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(5); //08
	A(9);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(5); //09
	A(9);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(2);	A(2);	A(1);	A(2);	A(2);	A(1);	A(1);	A(5); //10
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(5); //11
	A(9);	A(0);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(2);	A(1);	A(0);	A(5); //12
	A(9);	A(0);	A(0);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(0);	A(2);	A(1);	A(1);	A(0);	A(5); //13
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(0);	A(0);	A(0);	A(0);	A(2);	A(1);	A(1);	A(0);	A(5); //14
	A(9);	A(0);	A(0);	A(0);	A(1);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(1);	A(0);	A(0);	A(5); //15
	stick();
}
void cadr3()
{
	//00	=01		=02		=03		=04		=05		=06		=07		=08		=09		=10		=11		=12		=13		=NewLine
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //00
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //01
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(1);	A(1);	A(0);	A(0);	A(0);	A(0);	A(5); //02
	A(9);	A(0);	A(0);	A(1);	A(0);	A(1);	A(1);	A(0);	A(1);	A(1);	A(0);	A(0);	A(1);	A(0);	A(5); //03
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //04
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(0);	A(0);	A(0);	A(5); //05
	A(9);	A(0);	A(1);	A(0);	A(0);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(5); //06
	A(9);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(5); //07
	A(9);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //08
	A(9);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //09
	A(9);	A(1);	A(1);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //10
	A(9);	A(1);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(1);	A(5); //11
	A(9);	A(0);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(2);	A(1);	A(1);	A(5); //12
	A(9);	A(0);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(0);	A(2);	A(1);	A(1);	A(0);	A(5); //13
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(0);	A(0);	A(0);	A(0);	A(2);	A(1);	A(1);	A(0);	A(5); //14
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(1);	A(0);	A(0);	A(5); //15
	stick();
}
void cadr4()
{
	//00	=01		=02		=03		=04		=05		=06		=07		=08		=09		=10		=11		=12		=13		=NewLine
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //00
	A(9);	A(0);	A(0);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(0);	A(5); //01
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(1);	A(0);	A(0);	A(0);	A(1);	A(0);	A(0);	A(0);	A(5); //02
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(1);	A(0);	A(0);	A(1);	A(1);	A(0);	A(0);	A(0);	A(5); //03
	A(9);	A(0);	A(0);	A(0);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(0);	A(0);	A(5); //04
	A(9);	A(0);	A(1);	A(0);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(1);	A(0);	A(5); //05
	A(9);	A(0);	A(0);	A(0);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(0);	A(5); //06
	A(9);	A(0);	A(0);	A(1);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(1);	A(5); //07
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(2);	A(1);	A(1);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //08
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(1);	A(2);	A(1);	A(2);	A(1);	A(1);	A(5); //09
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(1);	A(1);	A(5); //10
	A(9);	A(1);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(2);	A(2);	A(2);	A(1);	A(1);	A(1);	A(5); //11
	A(9);	A(1);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(2);	A(1);	A(0);	A(5); //12
	A(9);	A(0);	A(1);	A(1);	A(2);	A(2);	A(2);	A(0);	A(0);	A(0);	A(2);	A(1);	A(1);	A(0);	A(5); //13
	A(9);	A(0);	A(1);	A(1);	A(1);	A(2);	A(0);	A(0);	A(0);	A(2);	A(2);	A(1);	A(1);	A(0);	A(5); //14
	A(9);	A(0);	A(0);	A(1);	A(1);	A(2);	A(2);	A(0);	A(0);	A(2);	A(2);	A(1);	A(0);	A(0);	A(5); //15
	stick();
}

int main()
{
	for (;;) //Бесконечный цикл
	{
		cadr1(); //Показ первого кадра
		cadr0(); //Межкадровый слайд
		cadr2(); //Показ второго кадра
		cadr0(); //Межкадровый слайд
		cadr3(); //Показ третьего кадра
		cadr0(); //Межкадровый слайд
		cadr4(); //Показ четвёртого кадра
		cadr0(); //Межкадровый слайд
	}
}
//Из-за библиотеки <windows.h>, данная программа работает только на OC Windows